mixin form_control(params)
  .form-control
    if (formElementsWithLabel.includes(params.type) && params.label)
      label.form-control__label(for=params.id)= params.label
    case params.type
      when 'select'
        +select(params)
      when 'textarea'
        textarea(id=params.id, placeholder= params.placeholder)= params.value
      when 'dropdown'
        +dropdown(params)
      when 'checkBoxList'
        +checkBoxList(params)
      when 'range'
        +rangeSlider(params)
      when 'dateDropdown'
        +dateDropdown(params)
      when 'toggle'
        +toggle(params)
      when 'filterDateDropdown'
        +filterDateDropdown(params)
      when 'radio'
        +radio(params)
      when 'like'
        +like(params)
      when 'rate'
        +rate(params)
      when 'checkbox'
        +checkBox(params)
      default
        input.form-control__input(type=params.type, id=params.id, placeholder= params.placeholder)

mixin select(params)
  .select
    select(id= params.id)
      if (params.emptyLabel)
        option(value='')= params.emptyLabel
      each option in params.options
        option(value= option.value)= option.title

mixin dropdown(params)
  .dropdown(holder= params.placeholder, total-params= params.reminder)
    .dropdown__select= params.placeholder
    .dropdown__list
      each option in params.list
        +counter(option, params.id)
      if (params.footer)
        .dropdown__footer
          .link.link__clear очистить
          .link.link__submit применить

mixin counter(params, id)
  .dropdown__item
    .title= params.title
    .counter
      .counter__btn.counter__btn--minus
      input.counter__value(type='text', disabled, name=params.name + '-' +id, value= params.value)
      .counter__btn.counter__btn--plus


mixin checkBoxList(params)
  div

mixin rangeSlider(params)
  .form-control__range(data-id= params.id, data-min= params.min, data-max= params.max)
    .slider(id=`slider-${params.id}`)
      .slider__value
        span.slider__count(id=`first-${params.id}`)= params.value[0]
        span.slider__count(id=`last-${params.id}`)= params.value[1]
      input(type='text', id=`count-min-${params.id}`, name= params.name[0], value= params.value[0])
      input(type='text', id=`count-max-${params.id}`, name= params.name[1], value= params.value[1])

mixin dateDropdown(params)
  div

mixin toggle(params)
  .form-control__toggle
    input(type='checkbox', id= params.id, name= params.id, checked=params.value)
    label(for= params.id)= params.label

mixin filterDateDropdown(params)
  div

mixin radio(params)
  .form-control__radio
    input(type='radio', id= params.id, name= params.name, value= params.value, checked=params.checked)
    label(for= params.id)= params.label

mixin inlineList(list, indent)
  .form-control__list(class=`form-control__list--line-${indent}`)
    each formItem in list
      +form_control(formItem)

mixin checkBox(params)
  .form-control__checkbox
    input(type='checkbox', id= params.id, name= params.id checked=params.value)
    label(for= params.id)= params.label

mixin like(params)
  .form-control__like(class={'clicked': params.clicked})
    input(type='text', name= params.name, value= params.value, disabled)

mixin rate(params)
  .form-control__rate(class=[`form-control__rate--${params.value}`, params.clicked ? 'clicked': null])
    each className in ['star--1', 'star--2', 'star--3','star--4','star--5' ]
      span.star(class=className)

mixin button(params)
  if (params.type)
    button.btn(type= params.type, class= params.classes, disabled= params.disabled): block
  else
    .btn(class= params.classes): block